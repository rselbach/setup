#:schema https://jj-vcs.github.io/jj/latest/config-schema.json

[user]
email = "rselbach@rselbach.com"
name = "Roberto Selbach"

[ui]
default-command = "log"
log-synthetic-elided-nodes = true
diff-formatter = ":git"
editor = "nvim"

[ui.graph]
style = "curved"

[git]
auto-local-bookmark = true
abandon-unreachable-commits = false
push-new-bookmarks = true

[signing]
behavior = "own"
backend = "gpg"
key ="7D1ABF3FA1B59C43"

[templates]
git_push_bookmark = '"rselbach/*" ++ change_id.short()'

[colors]
# Base customizations
"normal change_id" = { bold = true, fg = "magenta" }
"immutable change_id" = { bold = false, fg = "bright cyan" }

# Used by log node template
"node" = { bold = true }
"node elided" = { fg = "bright black" }
"node working_copy" = { fg = "green" }
"node conflict" = { fg = "red" }
"node immutable" = { fg = "bright cyan" }
"node wip" = { fg = "yellow" }
"node normal" = { bold = false }

# Used in other various templates
"text link" = { bold = true, fg = "magenta" }
"text warning" = { bold = true, fg = "red" }

[aliases]
ll = ["log", "-r", "all()", "-T", "builtin_log_detailed"]
l = ["log", "-r", "ancestors(reachable(@, mutable()), 2)"]
n = ["new"]

# Move the closest bookmark to the current commit. This is useful when
# working on a named branch, creating a bunch of commits, and then needing
# to update the bookmark before pushing.
tug = ["bookmark", "move", "--from", "closest_bookmark(@-)", "--to", "@-"]

# Rebase the current branch onto the trunk.
retrunk = ["rebase", "-d", "trunk()"]

[revset-aliases]
"closest_bookmark(to)" = "heads(::to & bookmarks())"
"fork_history(to, from)" = "fork_point(to | from)..@"

[template-aliases]
"format_timestamp(timestamp)" = "timestamp.ago()"
